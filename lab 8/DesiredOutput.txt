--- BasicSerialTest ---

p100.ecf.utoronto.ca% blitz -g os -wait -raw
Beginning execution...
====================  KPL PROGRAM STARTING  ====================
Initializing Thread Scheduler...
Initializing Thread Manager...
Initializing Frame Manager...
AllocateRandomFrames called.  NUMBER_OF_PHYSICAL_PAGE_FRAMES = 512
Initializing Disk Driver...
Initializing Serial Driver...
Initializing File Manager...

==========  BasicSerialTest  ==========

This test should be run in raw mode.

Hit the "a" key.  Do not hit ENTER or RETURN...
Returned value is correct.
The buffer was updated correctly.

Please type "abc".  Do not hit ENTER or RETURN...
Returned value is correct.
The buffer was updated correctly.

Please type "hello".  Do not hit ENTER or RETURN...
Returned value is correct.
Returned value is correct.
The buffer was updated correctly.

Please type control-J.  Do not hit ENTER or RETURN...
Returned value is correct.
The buffer was updated correctly.

Please type control-M.  Do not hit ENTER or RETURN...
Returned value is correct.
The buffer was updated correctly.

Please type control-H.  Do not hit ENTER or RETURN...
Returned value is correct.
The buffer was updated correctly.

Please type control-D.  Do not hit ENTER or RETURN...
Returned value is correct.
The buffer was not modified, as expected.

==========  Test Complete  ==========





--- EOFTest ---
p100.ecf.utoronto.ca% blitz -g os -wait -raw
Beginning execution...
====================  KPL PROGRAM STARTING  ====================
Initializing Thread Scheduler...
Initializing Thread Manager...
Initializing Frame Manager...
AllocateRandomFrames called.  NUMBER_OF_PHYSICAL_PAGE_FRAMES = 512
Initializing Disk Driver...
Initializing Serial Driver...
Initializing File Manager...

==========  EOFTest  ==========

This test should be run in 'raw' mode.

This function tests the handling of control-D.  Control-D is the
enf-of-file character.  When typed, it should cause an immediate
return from the Read syscall.  If no other characters have been
typed first, then the count returned from Read will be zero, which
many programs will interpret as 'end-of-file'.

Please hit control-D next.  The ENTER key should not be necessary...
Okay.
Please type "abc" followed by control-D.  The ENTER key should not be necessary...
Okay.

==========  Test Complete  ==========




--- OpenCloseTerminalTest ---
p100.ecf.utoronto.ca% blitz -g os -wait -raw
Beginning execution...
====================  KPL PROGRAM STARTING  ====================
Initializing Thread Scheduler...
Initializing Thread Manager...
Initializing Frame Manager...
AllocateRandomFrames called.  NUMBER_OF_PHYSICAL_PAGE_FRAMES = 512
Initializing Disk Driver...
Initializing Serial Driver...
Initializing File Manager...

==========  OpenCloseTerminalTest  ==========

Opening 'terminal' 10 times...
Closing all 10 fileDescriptors...
Opening 'terminal' 10 times...
Closing all 10 fileDescriptors...
Opening 'terminal' 10 times...
Closing all 10 fileDescriptors...
Opening 'terminal' 10 times...
Closing all 10 fileDescriptors...
Opening 'terminal' 10 times...
Closing all 10 fileDescriptors...
Opening 'terminal' 10 times...
Closing all 10 fileDescriptors...
Opening 'terminal' 10 times...
Closing all 10 fileDescriptors...
Opening 'terminal' 10 times...
Closing all 10 fileDescriptors...
Opening 'terminal' 10 times...
Closing all 10 fileDescriptors...
Opening 'terminal' 10 times...
Closing all 10 fileDescriptors...
Opening 'terminal' 10 times...
Attempting to open 'terminal' one more time, which should fail.
The syscall correctly returns -1.
Closing all 10 fileDescriptors...

==========  Test Complete  ==========



--- TerminalErrorTest ---

p100.ecf.utoronto.ca% blitz -g os -wait

Beginning execution...
====================  KPL PROGRAM STARTING  ====================
Initializing Thread Scheduler...
Initializing Thread Manager...
Initializing Frame Manager...
AllocateRandomFrames called.  NUMBER_OF_PHYSICAL_PAGE_FRAMES = 512
Initializing Disk Driver...
Initializing Serial Driver...
Initializing File Manager...

==========  TerminalErrorTest  ==========

(This test should be run in cooked mode.)
Opening 'terminal' file...
Reading with negative sizeInBytes...
Okay.
Reading with negative sizeInBytes...
Okay.
Reading with a pointer to a page which is read-only, which should be an error...
Please type "abc\n" next.

*****  Execution suspended on 'wait' instruction; waiting for additional user input  *****
abc
Okay.
Reading with a pointer which isn't in our address space, which should be an error...
Please type "xyz\n" next.

*****  Execution suspended on 'wait' instruction; waiting for additional user input  *****
xyz
Okay.
Reading with a pointer which is near the end of our address space...
Please type "123456\n" next.

*****  Execution suspended on 'wait' instruction; waiting for additional user input  *****
123456
Okay.
Reading with a pointer that crosses a page boundary...
Please type "abcdef\n" next.

*****  Execution suspended on 'wait' instruction; waiting for additional user input  *****
abcdef
Okay.
Writing with negative sizeInBytes...
Okay.
Writing with negative sizeInBytes...
Okay.
Writing with a pointer that crosses a page boundary...


==== This should print "GREETINGS" next ====
                        GREETINGS
Okay.
Writing with a pointer to a page which is read-only, which should be okay...


==== This should print "KERNEL CODE" next ====
                        KERNEL CODE

Writing with a pointer which isn't in our address space, which should be an error...
Okay.

==========  Test Complete  ==========


